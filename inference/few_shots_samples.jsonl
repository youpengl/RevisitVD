{"project": "savannah", "commit_id": "a0d7fe4589651c64bd16ddaaa634030bb0455866", "target": 1, "func": " pch_write_line (lin line, FILE *file)\n {\n  bool after_newline = p_line[line][p_len[line] - 1] == '\\n';\n   if (! fwrite (p_line[line], sizeof (*p_line[line]), p_len[line], file))\n     write_fatal ();\n   return after_newline;\n}\n", "cwe": "CWE-119", "big_vul_idx": 178645, "idx": 535, "hash": 109748454555121695743182615951035156943}
{"project": "savannah", "commit_id": "a0d7fe4589651c64bd16ddaaa634030bb0455866", "target": 0, "func": " pch_write_line (lin line, FILE *file)\n {\n  bool after_newline = (p_len[line] > 0) && (p_line[line][p_len[line] - 1] == '\\n');\n   if (! fwrite (p_line[line], sizeof (*p_line[line]), p_len[line], file))\n     write_fatal ();\n   return after_newline;\n}\n", "cwe": "CWE-119", "big_vul_idx": 178645, "idx": 158394, "hash": 217144092183050078310306191340626200681}
{"project": "tinc", "commit_id": "17a33dfd95b1a29e90db76414eb9622df9632320", "target": 1, "func": " void receive_tcppacket(connection_t *c, const char *buffer, int len) {\n \tvpn_packet_t outpkt;\n \n \toutpkt.len = len;\n \tif(c->options & OPTION_TCPONLY)\n \t\toutpkt.priority = 0;\n\telse\n\t\toutpkt.priority = -1;\n\tmemcpy(outpkt.data, buffer, len);\n\n\treceive_packet(c->node, &outpkt);\n}\n", "cwe": "CWE-119", "big_vul_idx": 179301, "idx": 1080, "hash": 130046906967549597758760447336187151115}
{"project": "tinc", "commit_id": "17a33dfd95b1a29e90db76414eb9622df9632320", "target": 0, "func": " void receive_tcppacket(connection_t *c, const char *buffer, int len) {\n \tvpn_packet_t outpkt;\n \n\tif(len > sizeof outpkt.data)\n\t\treturn;\n\n \toutpkt.len = len;\n \tif(c->options & OPTION_TCPONLY)\n \t\toutpkt.priority = 0;\n\telse\n\t\toutpkt.priority = -1;\n\tmemcpy(outpkt.data, buffer, len);\n\n\treceive_packet(c->node, &outpkt);\n}\n", "cwe": "CWE-119", "big_vul_idx": 179301, "idx": 158871, "hash": 237645872547157033698671999413216079111}
{"project": "linux", "commit_id": "4ab25786c87eb20857bbb715c3ae34ec8fd6a214", "target": 1, "func": " static __u8 *ch_report_fixup(struct hid_device *hdev, __u8 *rdesc,\n \t\tunsigned int *rsize)\n {\n\tif (*rsize >= 17 && rdesc[11] == 0x3c && rdesc[12] == 0x02) {\n \t\thid_info(hdev, \"fixing up Cherry Cymotion report descriptor\\n\");\n \t\trdesc[11] = rdesc[16] = 0xff;\n \t\trdesc[12] = rdesc[17] = 0x03;\n\t}\n\treturn rdesc;\n}\n", "cwe": "CWE-119", "big_vul_idx": 179542, "idx": 1290, "hash": 45538586871323178624538960674889390064}
{"project": "linux", "commit_id": "4ab25786c87eb20857bbb715c3ae34ec8fd6a214", "target": 0, "func": " static __u8 *ch_report_fixup(struct hid_device *hdev, __u8 *rdesc,\n \t\tunsigned int *rsize)\n {\n\tif (*rsize >= 18 && rdesc[11] == 0x3c && rdesc[12] == 0x02) {\n \t\thid_info(hdev, \"fixing up Cherry Cymotion report descriptor\\n\");\n \t\trdesc[11] = rdesc[16] = 0xff;\n \t\trdesc[12] = rdesc[17] = 0x03;\n\t}\n\treturn rdesc;\n}\n", "cwe": "CWE-119", "big_vul_idx": 179542, "idx": 159025, "hash": 256834588490855446076505549688746966197}
{"project": "linux", "commit_id": "4ab25786c87eb20857bbb715c3ae34ec8fd6a214", "target": 1, "func": " static __u8 *mr_report_fixup(struct hid_device *hdev, __u8 *rdesc,\n \t\tunsigned int *rsize)\n {\n\tif (*rsize >= 30 && rdesc[29] == 0x05 && rdesc[30] == 0x09) {\n \t\thid_info(hdev, \"fixing up button/consumer in HID report descriptor\\n\");\n \t\trdesc[30] = 0x0c;\n \t}\n\treturn rdesc;\n}\n", "cwe": "CWE-119", "big_vul_idx": 179545, "idx": 1293, "hash": 85432680744687476998085220534657720665}
{"project": "linux", "commit_id": "4ab25786c87eb20857bbb715c3ae34ec8fd6a214", "target": 0, "func": " static __u8 *mr_report_fixup(struct hid_device *hdev, __u8 *rdesc,\n \t\tunsigned int *rsize)\n {\n\tif (*rsize >= 31 && rdesc[29] == 0x05 && rdesc[30] == 0x09) {\n \t\thid_info(hdev, \"fixing up button/consumer in HID report descriptor\\n\");\n \t\trdesc[30] = 0x0c;\n \t}\n\treturn rdesc;\n}\n", "cwe": "CWE-119", "big_vul_idx": 179545, "idx": 159028, "hash": 306209230722426331387876983852689984451}
{"project": "linux", "commit_id": "4ab25786c87eb20857bbb715c3ae34ec8fd6a214", "target": 1, "func": " static __u8 *sp_report_fixup(struct hid_device *hdev, __u8 *rdesc,\n \t\tunsigned int *rsize)\n {\n\tif (*rsize >= 107 && rdesc[104] == 0x26 && rdesc[105] == 0x80 &&\n \t\t\trdesc[106] == 0x03) {\n \t\thid_info(hdev, \"fixing up Sunplus Wireless Desktop report descriptor\\n\");\n \t\trdesc[105] = rdesc[110] = 0x03;\n\t\trdesc[106] = rdesc[111] = 0x21;\n\t}\n\treturn rdesc;\n}\n", "cwe": "CWE-119", "big_vul_idx": 179547, "idx": 1295, "hash": 187317300382672400256987721928336315454}
{"project": "linux", "commit_id": "4ab25786c87eb20857bbb715c3ae34ec8fd6a214", "target": 0, "func": " static __u8 *sp_report_fixup(struct hid_device *hdev, __u8 *rdesc,\n \t\tunsigned int *rsize)\n {\n\tif (*rsize >= 112 && rdesc[104] == 0x26 && rdesc[105] == 0x80 &&\n \t\t\trdesc[106] == 0x03) {\n \t\thid_info(hdev, \"fixing up Sunplus Wireless Desktop report descriptor\\n\");\n \t\trdesc[105] = rdesc[110] = 0x03;\n\t\trdesc[106] = rdesc[111] = 0x21;\n\t}\n\treturn rdesc;\n}\n", "cwe": "CWE-119", "big_vul_idx": 179547, "idx": 159030, "hash": 112667349109587660051912130856948581598}
{"project": "w3m", "commit_id": "d43527cfa0dbb3ccefec4a6f7b32c1434739aa29", "target": 1, "func": "Strgrow(Str x)\n {\n     char *old = x->ptr;\n     int newlen;\n    newlen = x->length * 6 / 5;\n    if (newlen == x->length)\n \tnewlen += 2;\n     x->ptr = GC_MALLOC_ATOMIC(newlen);\n     x->area_size = newlen;\n    bcopy((void *)old, (void *)x->ptr, x->length);\n    GC_free(old);\n}\n", "cwe": "CWE-119", "big_vul_idx": 180064, "idx": 1704, "hash": 127289135144358368490082866609838745616}
{"project": "w3m", "commit_id": "d43527cfa0dbb3ccefec4a6f7b32c1434739aa29", "target": 0, "func": "Strgrow(Str x)\n {\n     char *old = x->ptr;\n     int newlen;\n    newlen = x->area_size * 6 / 5;\n    if (newlen == x->area_size)\n \tnewlen += 2;\n     x->ptr = GC_MALLOC_ATOMIC(newlen);\n     x->area_size = newlen;\n    bcopy((void *)old, (void *)x->ptr, x->length);\n    GC_free(old);\n}\n", "cwe": "CWE-119", "big_vul_idx": 180064, "idx": 159356, "hash": 279932231335318992883478620036118238745}
{"project": "jq", "commit_id": "8eb1367ca44e772963e704a700ef72ae2e12babd", "target": 1, "func": " static void tokenadd(struct jv_parser* p, char c) {\n   assert(p->tokenpos <= p->tokenlen);\n  if (p->tokenpos == p->tokenlen) {\n     p->tokenlen = p->tokenlen*2 + 256;\n     p->tokenbuf = jv_mem_realloc(p->tokenbuf, p->tokenlen);\n   }\n  assert(p->tokenpos < p->tokenlen);\n  p->tokenbuf[p->tokenpos++] = c;\n}\n", "cwe": "CWE-119", "big_vul_idx": 180649, "idx": 2221, "hash": 102885964769614872736798472628270855941}
{"project": "jq", "commit_id": "8eb1367ca44e772963e704a700ef72ae2e12babd", "target": 0, "func": " static void tokenadd(struct jv_parser* p, char c) {\n   assert(p->tokenpos <= p->tokenlen);\n  if (p->tokenpos >= (p->tokenlen - 1)) {\n     p->tokenlen = p->tokenlen*2 + 256;\n     p->tokenbuf = jv_mem_realloc(p->tokenbuf, p->tokenlen);\n   }\n  assert(p->tokenpos < p->tokenlen);\n  p->tokenbuf[p->tokenpos++] = c;\n}\n", "cwe": "CWE-119", "big_vul_idx": 180649, "idx": 159710, "hash": 82675174159625028820316401727347614414}
{"project": "weechat", "commit_id": "2fb346f25f79e412cf0ed314fdf791763c19b70b", "target": 1, "func": "irc_ctcp_dcc_filename_without_quotes (const char *filename)\n{\n     int length;\n \n     length = strlen (filename);\n    if (length > 0)\n     {\n         if ((filename[0] == '\\\"') && (filename[length - 1] == '\\\"'))\n             return weechat_strndup (filename + 1, length - 2);\n    }\n    return strdup (filename);\n}\n", "cwe": "CWE-119", "big_vul_idx": 181378, "idx": 2858, "hash": 205848505954917039643449582737936243948}
{"project": "weechat", "commit_id": "2fb346f25f79e412cf0ed314fdf791763c19b70b", "target": 0, "func": "irc_ctcp_dcc_filename_without_quotes (const char *filename)\n{\n     int length;\n \n     length = strlen (filename);\n    if (length > 1)\n     {\n         if ((filename[0] == '\\\"') && (filename[length - 1] == '\\\"'))\n             return weechat_strndup (filename + 1, length - 2);\n    }\n    return strdup (filename);\n}\n", "cwe": "CWE-119", "big_vul_idx": 181378, "idx": 160239, "hash": 146427232397831997160298392377248728282}
{"project": "miniupnp", "commit_id": "7aeb624b44f86d335841242ff427433190e7168a", "target": 1, "func": "ParseNameValue(const char * buffer, int bufsize,\n                struct NameValueParserData * data)\n {\n \tstruct xmlparser parser;\n\tdata->l_head = NULL;\n\tdata->portListing = NULL;\n\tdata->portListingLength = 0;\n \t/* init xmlparser object */\n \tparser.xmlstart = buffer;\n \tparser.xmlsize = bufsize;\n\tparser.data = data;\n\tparser.starteltfunc = NameValueParserStartElt;\n\tparser.endeltfunc = NameValueParserEndElt;\n\tparser.datafunc = NameValueParserGetData;\n\tparser.attfunc = 0;\n\tparsexml(&parser);\n}\n", "cwe": "CWE-119", "big_vul_idx": 182540, "idx": 3805, "hash": 18049727750159877335262818865589438805}
{"project": "miniupnp", "commit_id": "7aeb624b44f86d335841242ff427433190e7168a", "target": 0, "func": "ParseNameValue(const char * buffer, int bufsize,\n                struct NameValueParserData * data)\n {\n \tstruct xmlparser parser;\n\tmemset(data, 0, sizeof(struct NameValueParserData));\n \t/* init xmlparser object */\n \tparser.xmlstart = buffer;\n \tparser.xmlsize = bufsize;\n\tparser.data = data;\n\tparser.starteltfunc = NameValueParserStartElt;\n\tparser.endeltfunc = NameValueParserEndElt;\n\tparser.datafunc = NameValueParserGetData;\n\tparser.attfunc = 0;\n\tparsexml(&parser);\n}\n", "cwe": "CWE-119", "big_vul_idx": 182540, "idx": 161062, "hash": 134272332068689512328491661091071143956}
{"project": "Chrome", "commit_id": "7d8cefdf6d0e457b7a855c9503684f1058c2a356", "target": 1, "func": "WebGLObject::WebGLObject(WebGLRenderingContext* context)\n     : m_object(0)\n     , m_attachmentCount(0)\n     , m_deleted(false)\n{\n}\n", "cwe": "CWE-119", "big_vul_idx": 183631, "idx": 4694, "hash": 113581393010610799217508960162567347666}
{"project": "Chrome", "commit_id": "7d8cefdf6d0e457b7a855c9503684f1058c2a356", "target": 0, "func": "WebGLObject::WebGLObject(WebGLRenderingContext* context)\nWebGLObject::WebGLObject(WebGLRenderingContext*)\n     : m_object(0)\n     , m_attachmentCount(0)\n     , m_deleted(false)\n{\n}\n", "cwe": "CWE-119", "big_vul_idx": 183631, "idx": 161832, "hash": 294387494251585149370858136703336922327}
{"project": "Chrome", "commit_id": "76a3314ac3b711e01fae3b76a5d85f0eddeeec0b", "target": 1, "func": " bool BaseSettingChange::Init(Profile* profile) {\n  DCHECK(profile);\n   profile_ = profile;\n   return true;\n }\n", "cwe": "CWE-119", "big_vul_idx": 184330, "idx": 5308, "hash": 280299927734355536949977929219195325144}
{"project": "Chrome", "commit_id": "76a3314ac3b711e01fae3b76a5d85f0eddeeec0b", "target": 0, "func": " bool BaseSettingChange::Init(Profile* profile) {\n  DCHECK(profile && !profile_);\n   profile_ = profile;\n   return true;\n }\n", "cwe": "CWE-119", "big_vul_idx": 184330, "idx": 162432, "hash": 105620677973026277472973841318941682065}
{"project": "Chrome", "commit_id": "1595f66a8dec04864afd048809cd9d0802049feb", "target": 1, "func": "void removeAllDOMObjects()\n{\n     DOMDataStore& store = DOMData::getCurrentStore();\n \n     v8::HandleScope scope;\n \n    if (isMainThread()) {\n        DOMData::removeObjectsFromWrapperMap<Node>(&store, store.domNodeMap());\n        DOMData::removeObjectsFromWrapperMap<Node>(&store, store.activeDomNodeMap());\n    }\n     DOMData::removeObjectsFromWrapperMap<void>(&store, store.domObjectMap());\n }\n", "cwe": "CWE-119", "big_vul_idx": 184588, "idx": 5534, "hash": 158567607023592302579743183252905901964}
{"project": "Chrome", "commit_id": "1595f66a8dec04864afd048809cd9d0802049feb", "target": 0, "func": "void removeAllDOMObjects()\n{\n     DOMDataStore& store = DOMData::getCurrentStore();\n \n     v8::HandleScope scope;\n    ASSERT(!isMainThread());\n \n    // Note: We skip the Node wrapper maps because they exist only on the main thread.\n     DOMData::removeObjectsFromWrapperMap<void>(&store, store.domObjectMap());\n }\n", "cwe": "CWE-119", "big_vul_idx": 184588, "idx": 162645, "hash": 296408420410891180972946237618135528981}
{"project": "Chrome", "commit_id": "7ee3acb08d9de663e5ec3148ee98b666cd32ad82", "target": 1, "func": " int BrowserNonClientFrameViewAura::NonClientTopBorderHeight(\n     bool force_restored) const {\n   if (frame()->widget_delegate() &&\n       frame()->widget_delegate()->ShouldShowWindowTitle()) {\n     return close_button_->bounds().bottom();\n   }\n  if (!frame()->IsMaximized() || force_restored)\n    return kTabstripTopSpacingRestored;\n  return kTabstripTopSpacingMaximized;\n }\n", "cwe": "CWE-119", "big_vul_idx": 184696, "idx": 5629, "hash": 211513149709653660114436122650114461642}
{"project": "Chrome", "commit_id": "7ee3acb08d9de663e5ec3148ee98b666cd32ad82", "target": 0, "func": " int BrowserNonClientFrameViewAura::NonClientTopBorderHeight(\n     bool force_restored) const {\n  if (force_restored)\n    return kTabstripTopSpacingRestored;\n  if (frame()->IsFullscreen())\n    return 0;\n  if (frame()->IsMaximized())\n    return kTabstripTopSpacingMaximized;\n   if (frame()->widget_delegate() &&\n       frame()->widget_delegate()->ShouldShowWindowTitle()) {\n     return close_button_->bounds().bottom();\n   }\n  return kTabstripTopSpacingRestored;\n }\n", "cwe": "CWE-119", "big_vul_idx": 184696, "idx": 162734, "hash": 12690367807357723262978174016879688400}
{"project": "Chrome", "commit_id": "9965adea952e84c925de418e971b204dfda7d6e0", "target": 1, "func": "int MockNetworkTransaction::RestartWithAuth(\n    const AuthCredentials& credentials,\n    const CompletionCallback& callback) {\n  if (!IsReadyToRestartForAuth())\n     return ERR_FAILED;\n \n   HttpRequestInfo auth_request_info = *request_;\n  auth_request_info.extra_headers.AddHeaderFromString(\"Authorization: Bar\");\n \n  return StartInternal(&auth_request_info, callback, BoundNetLog());\n}\n", "cwe": "CWE-119", "big_vul_idx": 185304, "idx": 6173, "hash": 264094544930396230310436479757497141483}
{"project": "Chrome", "commit_id": "9965adea952e84c925de418e971b204dfda7d6e0", "target": 0, "func": "int MockNetworkTransaction::RestartWithAuth(\n    const AuthCredentials& credentials,\n    const CompletionCallback& callback) {\n  if (!IsReadyToRestartForAuth())\n     return ERR_FAILED;\n \n   HttpRequestInfo auth_request_info = *request_;\n  auth_request_info.extra_headers.SetHeader(\"Authorization\", \"Bar\");\n \n  return StartInternal(&auth_request_info, callback, BoundNetLog());\n}\n", "cwe": "CWE-119", "big_vul_idx": 185304, "idx": 163260, "hash": 59941443209715247183923753062921830710}
{"project": "Chrome", "commit_id": "5576cbc1d3e214dfbb5d3ffcdbe82aa8ba0088fc", "target": 1, "func": "void MidiManagerUsb::DispatchSendMidiData(MidiManagerClient* client,\n                                           uint32_t port_index,\n                                           const std::vector<uint8>& data,\n                                           double timestamp) {\n  DCHECK_LT(port_index, output_streams_.size());\n   output_streams_[port_index]->Send(data);\n   client->AccumulateMidiBytesSent(data.size());\n }\n", "cwe": "CWE-119", "big_vul_idx": 185923, "idx": 6726, "hash": 321192437589487280594628723718780914529}
{"project": "Chrome", "commit_id": "5576cbc1d3e214dfbb5d3ffcdbe82aa8ba0088fc", "target": 0, "func": "void MidiManagerUsb::DispatchSendMidiData(MidiManagerClient* client,\n                                           uint32_t port_index,\n                                           const std::vector<uint8>& data,\n                                           double timestamp) {\n  if (port_index >= output_streams_.size()) {\n    // |port_index| is provided by a renderer so we can't believe that it is\n    // in the valid range.\n    // TODO(toyoshim): Move this check to MidiHost and kill the renderer when\n    // it fails.\n    return;\n  }\n   output_streams_[port_index]->Send(data);\n   client->AccumulateMidiBytesSent(data.size());\n }\n", "cwe": "CWE-119", "big_vul_idx": 185923, "idx": 163807, "hash": 296874382149069666932861290969483300332}
{"project": "Android", "commit_id": "51e0cb2e5ec18eaf6fb331bc573ff27b743898f4", "target": 1, "func": "xmlParse3986Port(xmlURIPtr uri, const char **str)\n{\n const char *cur = *str;\n unsigned port = 0; /* unsigned for defined overflow behavior */\n\n if (ISA_DIGIT(cur)) {\n while (ISA_DIGIT(cur)) {\n\t    port = port * 10 + (*cur - '0');\n\n\n \t    cur++;\n \t}\n \tif (uri != NULL)\n\t    uri->port = port & INT_MAX; /* port value modulo INT_MAX+1 */\n \t*str = cur;\n \treturn(0);\n     }\n return(1);\n}\n", "cwe": "CWE-119", "big_vul_idx": 188141, "idx": 8687, "hash": 292664706247937933060696545151455995068}
{"project": "Android", "commit_id": "51e0cb2e5ec18eaf6fb331bc573ff27b743898f4", "target": 0, "func": "xmlParse3986Port(xmlURIPtr uri, const char **str)\n{\n const char *cur = *str;\n unsigned port = 0; /* unsigned for defined overflow behavior */\n\n if (ISA_DIGIT(cur)) {\n while (ISA_DIGIT(cur)) {\n\t    port = port * 10 + (*cur - '0');\n\n\n \t    cur++;\n \t}\n \tif (uri != NULL)\n\t    uri->port = port & USHRT_MAX; /* port value modulo INT_MAX+1 */\n \t*str = cur;\n \treturn(0);\n     }\n return(1);\n}\n", "cwe": "CWE-119", "big_vul_idx": 188141, "idx": 165552, "hash": 55443680980541978404165111131801657390}
{"project": "Android", "commit_id": "866dc26ad4a98cc835d075b627326e7d7e52ffa1", "target": 1, "func": "std::string utf16ToUtf8(const StringPiece16& utf16) {\n ssize_t utf8Length = utf16_to_utf8_length(utf16.data(), utf16.length());\n if (utf8Length <= 0) {\n return {};\n\n     }\n \n     std::string utf8;\n     utf8.resize(utf8Length);\n    utf16_to_utf8(utf16.data(), utf16.length(), &*utf8.begin());\n     return utf8;\n }\n", "cwe": "CWE-119", "big_vul_idx": 188182, "idx": 8725, "hash": 87067989763755311091043077678401445429}
{"project": "Android", "commit_id": "866dc26ad4a98cc835d075b627326e7d7e52ffa1", "target": 0, "func": "std::string utf16ToUtf8(const StringPiece16& utf16) {\n ssize_t utf8Length = utf16_to_utf8_length(utf16.data(), utf16.length());\n if (utf8Length <= 0) {\n return {};\n\n     }\n \n     std::string utf8;\n    // Make room for '\\0' explicitly.\n    utf8.resize(utf8Length + 1);\n    utf16_to_utf8(utf16.data(), utf16.length(), &*utf8.begin(), utf8Length + 1);\n     utf8.resize(utf8Length);\n     return utf8;\n }\n", "cwe": "CWE-119", "big_vul_idx": 188182, "idx": 165572, "hash": 80008994425016256900309557103302184605}
{"project": "Android", "commit_id": "d112f7d0c1dbaf0368365885becb11ca8d3f13a4", "target": 1, "func": " status_t NuPlayer::GenericSource::setBuffers(\n         bool audio, Vector<MediaBuffer *> &buffers) {\n    if (mIsWidevine && !audio && mVideoTrack.mSource != NULL) {\n         return mVideoTrack.mSource->setBuffers(buffers);\n     }\n     return INVALID_OPERATION;\n}\n", "cwe": "CWE-119", "big_vul_idx": 188188, "idx": 8731, "hash": 37168824736271117907053512106222115989}
{"project": "Android", "commit_id": "d112f7d0c1dbaf0368365885becb11ca8d3f13a4", "target": 0, "func": " status_t NuPlayer::GenericSource::setBuffers(\n         bool audio, Vector<MediaBuffer *> &buffers) {\n    if (mIsSecure && !audio && mVideoTrack.mSource != NULL) {\n         return mVideoTrack.mSource->setBuffers(buffers);\n     }\n     return INVALID_OPERATION;\n}\n", "cwe": "CWE-119", "big_vul_idx": 188188, "idx": 165575, "hash": 126412262018938801684106953215752901963}
{"project": "xserver", "commit_id": "94f11ca5cf011ef123bd222cabeaef6f424d76ac", "target": 1, "func": " tbGetBuffer(unsigned size)\n {\n    char *rtrn;\n \n    if (size >= BUFFER_SIZE)\n        return NULL;\n    if ((BUFFER_SIZE - tbNext) <= size)\n        tbNext = 0;\n    rtrn = &textBuffer[tbNext];\n    tbNext += size;\n    return rtrn;\n }\n", "cwe": "CWE-119", "big_vul_idx": 177864, "idx": 9116, "hash": 27093761620872921794312634195475922111}
{"project": "xserver", "commit_id": "94f11ca5cf011ef123bd222cabeaef6f424d76ac", "target": 0, "func": " tbGetBuffer(unsigned size)\n {\n    struct textBuffer *tb;\n \n    tb = &textBuffer[textBufferIndex];\n    textBufferIndex = (textBufferIndex + 1) % NUM_BUFFER;\n\n    if (size > tb->size) {\n        free(tb->buffer);\n        tb->buffer = xnfalloc(size);\n        tb->size = size;\n    }\n    return tb->buffer;\n }\n", "cwe": "CWE-119", "big_vul_idx": 177864, "idx": 184273, "hash": 49291138841195158996931911501386126665}
{"project": "linux", "commit_id": "201f99f170df14ba52ea4c52847779042b7a623b", "target": 1, "func": "static ssize_t exitcode_proc_write(struct file *file,\n \t\tconst char __user *buffer, size_t count, loff_t *pos)\n {\n \tchar *end, buf[sizeof(\"nnnnn\\0\")];\n \tint tmp;\n \n\tif (copy_from_user(buf, buffer, count))\n \t\treturn -EFAULT;\n \n \ttmp = simple_strtol(buf, &end, 0);\n\tif ((*end != '\\0') && !isspace(*end))\n\t\treturn -EINVAL;\n\n\tuml_exitcode = tmp;\n\treturn count;\n}\n", "cwe": "CWE-119", "big_vul_idx": 179138, "idx": 9229, "hash": 196296543578911643711491902380101464697}
{"project": "linux", "commit_id": "201f99f170df14ba52ea4c52847779042b7a623b", "target": 0, "func": "static ssize_t exitcode_proc_write(struct file *file,\n \t\tconst char __user *buffer, size_t count, loff_t *pos)\n {\n \tchar *end, buf[sizeof(\"nnnnn\\0\")];\n\tsize_t size;\n \tint tmp;\n \n\tsize = min(count, sizeof(buf));\n\tif (copy_from_user(buf, buffer, size))\n \t\treturn -EFAULT;\n \n \ttmp = simple_strtol(buf, &end, 0);\n\tif ((*end != '\\0') && !isspace(*end))\n\t\treturn -EINVAL;\n\n\tuml_exitcode = tmp;\n\treturn count;\n}\n", "cwe": "CWE-119", "big_vul_idx": 179138, "idx": 184380, "hash": 215047016946258108212673956046907957714}
{"project": "qemu", "commit_id": "d2ef4b61fe6d33d2a5dcf100a9b9440de341ad62", "target": 1, "func": " static int get_int32_le(QEMUFile *f, void *pv, size_t size)\n {\n    int32_t loaded;\n     int32_t loaded;\n     qemu_get_sbe32s(f, &loaded);\n \n    if (loaded <= *cur) {\n         *cur = loaded;\n         return 0;\n     }\n}\n", "cwe": "CWE-119", "big_vul_idx": 178531, "idx": 10462, "hash": 134727717376042796464641496758190048357}
{"project": "qemu", "commit_id": "d2ef4b61fe6d33d2a5dcf100a9b9440de341ad62", "target": 0, "func": " static int get_int32_le(QEMUFile *f, void *pv, size_t size)\n {\n    int32_t loaded;\n     int32_t loaded;\n     qemu_get_sbe32s(f, &loaded);\n \n    if (loaded >= 0 && loaded <= *cur) {\n         *cur = loaded;\n         return 0;\n     }\n}\n", "cwe": "CWE-119", "big_vul_idx": 178531, "idx": 194779, "hash": 292787055355379809682628186389800016814}
{"project": "savannah", "commit_id": "135c3faebb96f8f550bd4f318716f2e1e095a969", "target": 1, "func": "  cf2_initGlobalRegionBuffer( CFF_Decoder*  decoder,\n                               CF2_UInt      idx,\n                               CF2_Buffer    buf )\n   {\n    FT_ASSERT( decoder && decoder->globals );\n \n     FT_ZERO( buf );\n \n    idx += decoder->globals_bias;\n     if ( idx >= decoder->num_globals )\n       return TRUE;     /* error */\n \n     buf->start =\n     buf->ptr   = decoder->globals[idx];\n     buf->end   = decoder->globals[idx + 1];\n  }\n", "cwe": "CWE-20", "big_vul_idx": 178393, "idx": 394, "hash": 57508056900925331860444886992748368704}
{"project": "savannah", "commit_id": "135c3faebb96f8f550bd4f318716f2e1e095a969", "target": 0, "func": "  cf2_initGlobalRegionBuffer( CFF_Decoder*  decoder,\n                               CF2_UInt      idx,\n                               CF2_Buffer    buf )\n   {\n    FT_ASSERT( decoder );\n \n     FT_ZERO( buf );\n \n    idx += decoder->globals_bias;\n     if ( idx >= decoder->num_globals )\n       return TRUE;     /* error */\n \n    FT_ASSERT( decoder->globals );\n\n     buf->start =\n     buf->ptr   = decoder->globals[idx];\n     buf->end   = decoder->globals[idx + 1];\n  }\n", "cwe": "CWE-20", "big_vul_idx": 178393, "idx": 158257, "hash": 85328325045424973590234914529770679611}
{"project": "xserver", "commit_id": "3f0d3f4d97bce75c1828635c322b6560a45a037f", "target": 1, "func": "validGlxScreen(ClientPtr client, int screen, __GLXscreen **pGlxScreen, int *err)\n{\n     /*\n     ** Check if screen exists.\n     */\n    if (screen >= screenInfo.numScreens) {\n \tclient->errorValue = screen;\n \t*err = BadValue;\n \treturn FALSE;\n    }\n    *pGlxScreen = glxGetScreen(screenInfo.screens[screen]);\n\n    return TRUE;\n}\n", "cwe": "CWE-20", "big_vul_idx": 178442, "idx": 426, "hash": 326310780415306211020981690928062594010}
{"project": "xserver", "commit_id": "3f0d3f4d97bce75c1828635c322b6560a45a037f", "target": 0, "func": "validGlxScreen(ClientPtr client, int screen, __GLXscreen **pGlxScreen, int *err)\n{\n     /*\n     ** Check if screen exists.\n     */\n    if (screen < 0 || screen >= screenInfo.numScreens) {\n \tclient->errorValue = screen;\n \t*err = BadValue;\n \treturn FALSE;\n    }\n    *pGlxScreen = glxGetScreen(screenInfo.screens[screen]);\n\n    return TRUE;\n}\n", "cwe": "CWE-20", "big_vul_idx": 178442, "idx": 158289, "hash": 139727062407114627412034276115430172130}
{"project": "linux", "commit_id": "36ae3c0a36b7456432fedce38ae2f7bd3e01a563", "target": 1, "func": "kvm_irqfd(struct kvm *kvm, struct kvm_irqfd *args)\n {\n \tif (args->flags & ~(KVM_IRQFD_FLAG_DEASSIGN | KVM_IRQFD_FLAG_RESAMPLE))\n \t\treturn -EINVAL;\n \n \tif (args->flags & KVM_IRQFD_FLAG_DEASSIGN)\n \t\treturn kvm_irqfd_deassign(kvm, args);\n\n\treturn kvm_irqfd_assign(kvm, args);\n}\n", "cwe": "CWE-20", "big_vul_idx": 180792, "idx": 2347, "hash": 83207294150061306602211255224566801067}
{"project": "linux", "commit_id": "36ae3c0a36b7456432fedce38ae2f7bd3e01a563", "target": 0, "func": "kvm_irqfd(struct kvm *kvm, struct kvm_irqfd *args)\n {\n \tif (args->flags & ~(KVM_IRQFD_FLAG_DEASSIGN | KVM_IRQFD_FLAG_RESAMPLE))\n \t\treturn -EINVAL;\n\tif (args->gsi >= KVM_MAX_IRQ_ROUTES)\n\t\treturn -EINVAL;\n \n \tif (args->flags & KVM_IRQFD_FLAG_DEASSIGN)\n \t\treturn kvm_irqfd_deassign(kvm, args);\n\n\treturn kvm_irqfd_assign(kvm, args);\n}\n", "cwe": "CWE-20", "big_vul_idx": 180792, "idx": 159830, "hash": 14592003181220354282743542395441951323}
{"project": "linux", "commit_id": "638164a2718f337ea224b747cf5977ef143166a4", "target": 1, "func": "void f2fs_wait_discard_bios(struct f2fs_sb_info *sbi)\n {\n \t__issue_discard_cmd(sbi, false);\n \t__drop_discard_cmd(sbi);\n\t__wait_discard_cmd(sbi, false);\n }\n", "cwe": "CWE-20", "big_vul_idx": 182586, "idx": 3847, "hash": 66587864384024676912151734865897947314}
{"project": "linux", "commit_id": "638164a2718f337ea224b747cf5977ef143166a4", "target": 0, "func": "void f2fs_wait_discard_bios(struct f2fs_sb_info *sbi)\nvoid f2fs_wait_discard_bios(struct f2fs_sb_info *sbi, bool umount)\n {\n \t__issue_discard_cmd(sbi, false);\n \t__drop_discard_cmd(sbi);\n\t__wait_discard_cmd(sbi, !umount);\n }\n", "cwe": "CWE-20", "big_vul_idx": 182586, "idx": 161097, "hash": 223328090790695623100816537949355115453}
{"project": "Chrome", "commit_id": "d333e22282bd4bdaa2864980cd45c272f206a44c", "target": 1, "func": " void LayerWebKitThread::setNeedsCommit()\n {\n     if (m_owner)\n        m_owner->notifySyncRequired();\n }\n", "cwe": "CWE-20", "big_vul_idx": 185294, "idx": 6164, "hash": 74204523172678715611232918460424691981}
{"project": "Chrome", "commit_id": "d333e22282bd4bdaa2864980cd45c272f206a44c", "target": 0, "func": " void LayerWebKitThread::setNeedsCommit()\n {\n    // Call notifyFlushRequired(), which in this implementation plumbs through to\n     if (m_owner)\n        m_owner->notifyFlushRequired();\n }\n", "cwe": "CWE-20", "big_vul_idx": 185294, "idx": 163252, "hash": 8622689505823860687794398323432732147}
{"project": "Chrome", "commit_id": "a8d6ae61d266d8bc44c3dd2d08bda32db701e359", "target": 1, "func": "bool DownloadItemImpl::CanOpenDownload() {\n   const bool is_complete = GetState() == DownloadItem::COMPLETE;\n   return (!IsDone() || is_complete) && !IsTemporary() &&\n         !file_externally_removed_;\n }\n", "cwe": "CWE-20", "big_vul_idx": 186643, "idx": 7367, "hash": 238820870745881731637383962587014801758}
{"project": "Chrome", "commit_id": "a8d6ae61d266d8bc44c3dd2d08bda32db701e359", "target": 0, "func": "bool DownloadItemImpl::CanOpenDownload() {\n   const bool is_complete = GetState() == DownloadItem::COMPLETE;\n   return (!IsDone() || is_complete) && !IsTemporary() &&\n         !file_externally_removed_ &&\n         delegate_->IsMostRecentDownloadItemAtFilePath(this);\n }\n", "cwe": "CWE-20", "big_vul_idx": 186643, "idx": 164433, "hash": 53503357604745761561008833997870749728}
{"project": "Chrome", "commit_id": "94b3728a2836da335a10085d4089c9d8e1c9d225", "target": 1, "func": " int PDFiumEngine::GetVisiblePageIndex(FPDF_PAGE page) {\n  for (int page_index : visible_pages_) {\n     if (pages_[page_index]->GetPage() == page)\n       return page_index;\n   }\n  return -1;\n}\n", "cwe": "CWE-20", "big_vul_idx": 186678, "idx": 7400, "hash": 306739967883605750680216003818477431181}
{"project": "Chrome", "commit_id": "94b3728a2836da335a10085d4089c9d8e1c9d225", "target": 0, "func": " int PDFiumEngine::GetVisiblePageIndex(FPDF_PAGE page) {\n  // Copy visible_pages_ since it can change as a result of loading the page in\n  // GetPage(). See https://crbug.com/822091.\n  std::vector<int> visible_pages_copy(visible_pages_);\n  for (int page_index : visible_pages_copy) {\n     if (pages_[page_index]->GetPage() == page)\n       return page_index;\n   }\n  return -1;\n}\n", "cwe": "CWE-20", "big_vul_idx": 186678, "idx": 164456, "hash": 207319984385427415840062165041352197875}
{"project": "Chrome", "commit_id": "bd0fde2518644eea1cc53a01e3e3cce1c70e7157", "target": 1, "func": " bool NavigateToUrlWithEdge(const base::string16& url) {\n   base::string16 protocol_url = L\"microsoft-edge:\" + url;\n   SHELLEXECUTEINFO info = { sizeof(info) };\n  info.fMask = SEE_MASK_NOASYNC | SEE_MASK_FLAG_NO_UI;\n   info.lpVerb = L\"open\";\n   info.lpFile = protocol_url.c_str();\n   info.nShow = SW_SHOWNORMAL;\n  if (::ShellExecuteEx(&info))\n    return true;\n  PLOG(ERROR) << \"Failed to launch Edge for uninstall survey\";\n  return false;\n}\n", "cwe": "CWE-20", "big_vul_idx": 186770, "idx": 7478, "hash": 9734627333286498488307779796857895269}
{"project": "Chrome", "commit_id": "bd0fde2518644eea1cc53a01e3e3cce1c70e7157", "target": 0, "func": " bool NavigateToUrlWithEdge(const base::string16& url) {\n   base::string16 protocol_url = L\"microsoft-edge:\" + url;\n   SHELLEXECUTEINFO info = { sizeof(info) };\n  info.fMask = SEE_MASK_NOASYNC;\n   info.lpVerb = L\"open\";\n   info.lpFile = protocol_url.c_str();\n   info.nShow = SW_SHOWNORMAL;\n  if (::ShellExecuteEx(&info))\n    return true;\n  PLOG(ERROR) << \"Failed to launch Edge for uninstall survey\";\n  return false;\n}\n", "cwe": "CWE-20", "big_vul_idx": 186770, "idx": 164528, "hash": 198565485258494291378144500794160522807}
{"project": "Chrome", "commit_id": "303d78445257d1eec726c4ebadb3517cb16c8c09", "target": 1, "func": "ExtensionInstallDialogView::ExtensionInstallDialogView(\n    Profile* profile,\n    content::PageNavigator* navigator,\n    const ExtensionInstallPrompt::DoneCallback& done_callback,\n    std::unique_ptr<ExtensionInstallPrompt::Prompt> prompt)\n    : profile_(profile),\n      navigator_(navigator),\n      done_callback_(done_callback),\n       prompt_(std::move(prompt)),\n       container_(NULL),\n       scroll_view_(NULL),\n      handled_result_(false) {\n   InitView();\n }\n", "cwe": "CWE-20", "big_vul_idx": 187143, "idx": 7804, "hash": 15427734945482777536410234481930575123}
{"project": "Chrome", "commit_id": "303d78445257d1eec726c4ebadb3517cb16c8c09", "target": 0, "func": "ExtensionInstallDialogView::ExtensionInstallDialogView(\n    Profile* profile,\n    content::PageNavigator* navigator,\n    const ExtensionInstallPrompt::DoneCallback& done_callback,\n    std::unique_ptr<ExtensionInstallPrompt::Prompt> prompt)\n    : profile_(profile),\n      navigator_(navigator),\n      done_callback_(done_callback),\n       prompt_(std::move(prompt)),\n       container_(NULL),\n       scroll_view_(NULL),\n      handled_result_(false),\n      install_button_enabled_(false) {\n   InitView();\n }\n", "cwe": "CWE-20", "big_vul_idx": 187143, "idx": 164841, "hash": 278237250685188733359940450361265857480}
{"project": "Android", "commit_id": "122feb9a0b04290f55183ff2f0384c6c53756bd8", "target": 1, "func": "static jboolean enableNative(JNIEnv* env, jobject obj) {\n     ALOGV(\"%s:\",__FUNCTION__);\n \n     jboolean result = JNI_FALSE;\n     if (!sBluetoothInterface) return result;\n    int ret = sBluetoothInterface->enable();\n     result = (ret == BT_STATUS_SUCCESS || ret == BT_STATUS_DONE) ? JNI_TRUE : JNI_FALSE;\n     return result;\n }\n", "cwe": "CWE-20", "big_vul_idx": 188183, "idx": 8726, "hash": 294169828456817773682589694846596955951}
{"project": "Android", "commit_id": "122feb9a0b04290f55183ff2f0384c6c53756bd8", "target": 0, "func": "static jboolean cancelDiscoveryNative(JNIEnv* env, jobject obj) {\n    ALOGV(\"%s:\",__FUNCTION__);\n\n    jboolean result = JNI_FALSE;\n if (!sBluetoothInterface) return result;\n\n int ret = sBluetoothInterface->cancel_discovery();\n    result = (ret == BT_STATUS_SUCCESS) ? JNI_TRUE : JNI_FALSE;\n return result;\n}\n", "cwe": "CWE-20", "big_vul_idx": 176839, "idx": 157100, "hash": 23439806895655931260290577263623776634}
{"project": "xserver", "commit_id": "6c69235a9dfc52e4b4e47630ff4bab1a820eb543", "target": 1, "func": " int __glXDispSwap_CreateContext(__GLXclientState *cl, GLbyte *pc)\n {\n     xGLXCreateContextReq *req = (xGLXCreateContextReq *) pc;\n     __GLX_DECLARE_SWAP_VARIABLES;\n \n     __GLX_SWAP_SHORT(&req->length);\n     __GLX_SWAP_INT(&req->context);\n     __GLX_SWAP_INT(&req->visual);\n    return __glXDisp_CreateContext(cl, pc);\n}\n", "cwe": "CWE-20", "big_vul_idx": 178441, "idx": 9163, "hash": 339483667857637655861912070254190836266}
{"project": "xserver", "commit_id": "6c69235a9dfc52e4b4e47630ff4bab1a820eb543", "target": 0, "func": " int __glXDispSwap_CreateContext(__GLXclientState *cl, GLbyte *pc)\n {\n    ClientPtr client = cl->client;\n     xGLXCreateContextReq *req = (xGLXCreateContextReq *) pc;\n     __GLX_DECLARE_SWAP_VARIABLES;\n \n    REQUEST_SIZE_MATCH(xGLXCreateContextReq);\n\n     __GLX_SWAP_SHORT(&req->length);\n     __GLX_SWAP_INT(&req->context);\n     __GLX_SWAP_INT(&req->visual);\n    return __glXDisp_CreateContext(cl, pc);\n}\n", "cwe": "CWE-20", "big_vul_idx": 178441, "idx": 184319, "hash": 95147514966381698040661889159757558011}
{"project": "qemu", "commit_id": "65a8e1f6413a0f6f79894da710b5d6d43361d27d", "target": 1, "func": "size_t mptsas_config_ioc_0(MPTSASState *s, uint8_t **data, int address)\n{\n    PCIDeviceClass *pcic = PCI_DEVICE_GET_CLASS(s);\n\n     return MPTSAS_CONFIG_PACK(0, MPI_CONFIG_PAGETYPE_IOC, 0x01,\n                               \"*l*lwwb*b*b*blww\",\n                               pcic->vendor_id, pcic->device_id, pcic->revision,\n                              pcic->subsystem_vendor_id,\n                               pcic->subsystem_id);\n }\n", "cwe": "CWE-20", "big_vul_idx": 178106, "idx": 10325, "hash": 222774731993991100736489546867888744653}
{"project": "qemu", "commit_id": "65a8e1f6413a0f6f79894da710b5d6d43361d27d", "target": 0, "func": "size_t mptsas_config_ioc_0(MPTSASState *s, uint8_t **data, int address)\n{\n    PCIDeviceClass *pcic = PCI_DEVICE_GET_CLASS(s);\n\n     return MPTSAS_CONFIG_PACK(0, MPI_CONFIG_PAGETYPE_IOC, 0x01,\n                               \"*l*lwwb*b*b*blww\",\n                               pcic->vendor_id, pcic->device_id, pcic->revision,\n                              pcic->class_id, pcic->subsystem_vendor_id,\n                               pcic->subsystem_id);\n }\n", "cwe": "CWE-20", "big_vul_idx": 178106, "idx": 194667, "hash": 153738016913324481063937666568089035211}
{"project": "qemu", "commit_id": "65a8e1f6413a0f6f79894da710b5d6d43361d27d", "target": 1, "func": "size_t mptsas_config_manufacturing_1(MPTSASState *s, uint8_t **data, int address)\n {\n     /* VPD - all zeros */\n     return MPTSAS_CONFIG_PACK(1, MPI_CONFIG_PAGETYPE_MANUFACTURING, 0x00,\n                              \"s256\");\n }\n", "cwe": "CWE-20", "big_vul_idx": 178107, "idx": 10326, "hash": 172679888862406933067398122810254151279}
{"project": "qemu", "commit_id": "65a8e1f6413a0f6f79894da710b5d6d43361d27d", "target": 0, "func": "size_t mptsas_config_manufacturing_1(MPTSASState *s, uint8_t **data, int address)\n {\n     /* VPD - all zeros */\n     return MPTSAS_CONFIG_PACK(1, MPI_CONFIG_PAGETYPE_MANUFACTURING, 0x00,\n                              \"*s256\");\n }\n", "cwe": "CWE-20", "big_vul_idx": 178107, "idx": 194668, "hash": 17862469723257369242792631898862511056}
{"project": "qemu", "commit_id": "415ab35a441eca767d033a2702223e785b9d5190", "target": 1, "func": "static int ne2000_buffer_full(NE2000State *s)\n {\n     int avail, index, boundary;\n \n     index = s->curpag << 8;\n     boundary = s->boundary << 8;\n     if (index < boundary)\n        return 1;\n    return 0;\n}\n", "cwe": "CWE-20", "big_vul_idx": 178356, "idx": 10412, "hash": 251741541197334487126568870857316605986}
{"project": "qemu", "commit_id": "415ab35a441eca767d033a2702223e785b9d5190", "target": 0, "func": "static int ne2000_buffer_full(NE2000State *s)\n {\n     int avail, index, boundary;\n \n    if (s->stop <= s->start) {\n        return 1;\n    }\n\n     index = s->curpag << 8;\n     boundary = s->boundary << 8;\n     if (index < boundary)\n        return 1;\n    return 0;\n}\n", "cwe": "CWE-20", "big_vul_idx": 178356, "idx": 194736, "hash": 102003477430627754830861245789184032031}
{"project": "gpmf-parser", "commit_id": "341f12cd5b97ab419e53853ca00176457c9f1681", "target": 1, "func": "GPMF_ERR IsValidSize(GPMF_stream *ms, uint32_t size) // size is in longs not bytes.\n {\n \tif (ms)\n \t{\n\t\tint32_t nestsize = (int32_t)ms->nest_size[ms->nest_level];\n \t\tif (nestsize == 0 && ms->nest_level == 0)\n \t\t\tnestsize = ms->buffer_size_longs;\n \n\t\tif (size + 2 <= nestsize) return GPMF_OK;\n\t}\n\treturn GPMF_ERROR_BAD_STRUCTURE;\n}\n", "cwe": "CWE-787", "big_vul_idx": 182716, "idx": 3937, "hash": 39887036510019131347357739912182783183}
{"project": "gpmf-parser", "commit_id": "341f12cd5b97ab419e53853ca00176457c9f1681", "target": 0, "func": "GPMF_ERR IsValidSize(GPMF_stream *ms, uint32_t size) // size is in longs not bytes.\n {\n \tif (ms)\n \t{\n\t\tuint32_t nestsize = (uint32_t)ms->nest_size[ms->nest_level];\n \t\tif (nestsize == 0 && ms->nest_level == 0)\n \t\t\tnestsize = ms->buffer_size_longs;\n \n\t\tif (size + 2 <= nestsize) return GPMF_OK;\n\t}\n\treturn GPMF_ERROR_BAD_STRUCTURE;\n}\n", "cwe": "CWE-787", "big_vul_idx": 182716, "idx": 161192, "hash": 132179529803237370943473119451582178644}
{"project": "qemu", "commit_id": "926cde5f3e4d2504ed161ed0cb771ac7cad6fd11", "target": 1, "func": "static void esp_do_dma(ESPState *s)\n{\n    uint32_t len;\n    int to_device;\n\n     len = s->dma_left;\n     if (s->do_cmd) {\n         trace_esp_do_dma(s->cmdlen, len);\n         s->dma_memory_read(s->dma_opaque, &s->cmdbuf[s->cmdlen], len);\n         return;\n     }\n        return;\n    }\n", "cwe": "CWE-787", "big_vul_idx": 178133, "idx": 10335, "hash": 315645112648473790512625990144427128450}
{"project": "qemu", "commit_id": "926cde5f3e4d2504ed161ed0cb771ac7cad6fd11", "target": 0, "func": "static void esp_do_dma(ESPState *s)\n{\n    uint32_t len;\n    int to_device;\n\n     len = s->dma_left;\n     if (s->do_cmd) {\n         trace_esp_do_dma(s->cmdlen, len);\n        assert (s->cmdlen <= sizeof(s->cmdbuf) &&\n                len <= sizeof(s->cmdbuf) - s->cmdlen);\n         s->dma_memory_read(s->dma_opaque, &s->cmdbuf[s->cmdlen], len);\n         return;\n     }\n        return;\n    }\n", "cwe": "CWE-787", "big_vul_idx": 178133, "idx": 194677, "hash": 17330094584653539375165315478119002174}
{"project": "linux", "commit_id": "fc27fe7e8deef2f37cba3f2be2d52b6ca5eb9d57", "target": 1, "func": "static int snd_seq_device_dev_free(struct snd_device *device)\n {\n \tstruct snd_seq_device *dev = device->device_data;\n \n \tput_device(&dev->dev);\n \treturn 0;\n }\n", "cwe": "CWE-416", "big_vul_idx": 180854, "idx": 2404, "hash": 27591105700120663554036974683684216243}
{"project": "linux", "commit_id": "fc27fe7e8deef2f37cba3f2be2d52b6ca5eb9d57", "target": 0, "func": "static int snd_seq_device_dev_disconnect(struct snd_device *device)\n{\n\tstruct snd_seq_device *dev = device->device_data;\n\n\tdevice_del(&dev->dev);\n\treturn 0;\n}\n", "cwe": "CWE-416", "big_vul_idx": 59950, "idx": 57066, "hash": 8838769083916456631576824947549432302}
{"project": "linux", "commit_id": "040757f738e13caaa9c5078bca79aa97e11dde88", "target": 1, "func": "static void put_ucounts(struct ucounts *ucounts)\n {\n \tunsigned long flags;\n \n\tif (atomic_dec_and_test(&ucounts->count)) {\n\t\tspin_lock_irqsave(&ucounts_lock, flags);\n \t\thlist_del_init(&ucounts->node);\n\t\tspin_unlock_irqrestore(&ucounts_lock, flags);\n \n\t\tkfree(ucounts);\n\t}\n }\n", "cwe": "CWE-416", "big_vul_idx": 181488, "idx": 2943, "hash": 275296759605816536274306603255057452438}
{"project": "linux", "commit_id": "040757f738e13caaa9c5078bca79aa97e11dde88", "target": 0, "func": "static void put_ucounts(struct ucounts *ucounts)\n {\n \tunsigned long flags;\n \n\tspin_lock_irqsave(&ucounts_lock, flags);\n\tucounts->count -= 1;\n\tif (!ucounts->count)\n \t\thlist_del_init(&ucounts->node);\n\telse\n\t\tucounts = NULL;\n\tspin_unlock_irqrestore(&ucounts_lock, flags);\n \n\tkfree(ucounts);\n }\n", "cwe": "CWE-416", "big_vul_idx": 181488, "idx": 160313, "hash": 64776964745445162085849399494022918521}
{"project": "libxkbcommon", "commit_id": "c1e5ac16e77a21f87bdf3bc4dea61b037a17dddb", "target": 1, "func": "ExprAppendMultiKeysymList(ExprDef *expr, ExprDef *append)\n{\n    unsigned nSyms = darray_size(expr->keysym_list.syms);\n    unsigned numEntries = darray_size(append->keysym_list.syms);\n\n    darray_append(expr->keysym_list.symsMapIndex, nSyms);\n     darray_append(expr->keysym_list.symsNumEntries, numEntries);\n     darray_concat(expr->keysym_list.syms, append->keysym_list.syms);\n \n    FreeStmt((ParseCommon *) &append);\n \n     return expr;\n }\n", "cwe": "CWE-416", "big_vul_idx": 182265, "idx": 3600, "hash": 50655231442243782136237033048286386578}
{"project": "libxkbcommon", "commit_id": "c1e5ac16e77a21f87bdf3bc4dea61b037a17dddb", "target": 0, "func": "ExprAppendMultiKeysymList(ExprDef *expr, ExprDef *append)\n{\n    unsigned nSyms = darray_size(expr->keysym_list.syms);\n    unsigned numEntries = darray_size(append->keysym_list.syms);\n\n    darray_append(expr->keysym_list.symsMapIndex, nSyms);\n     darray_append(expr->keysym_list.symsNumEntries, numEntries);\n     darray_concat(expr->keysym_list.syms, append->keysym_list.syms);\n \n    FreeStmt((ParseCommon *) append);\n \n     return expr;\n }\n", "cwe": "CWE-416", "big_vul_idx": 182265, "idx": 160875, "hash": 47338399590845782992206064283940407292}
{"project": "linux", "commit_id": "21b5944350052d2583e82dd59b19a9ba94a007f0", "target": 1, "func": "struct net *get_net_ns_by_id(struct net *net, int id)\n{\n\tstruct net *peer;\n\n\tif (id < 0)\n\t\treturn NULL;\n\n\trcu_read_lock();\n \tspin_lock_bh(&net->nsid_lock);\n \tpeer = idr_find(&net->netns_ids, id);\n \tif (peer)\n\t\tget_net(peer);\n \tspin_unlock_bh(&net->nsid_lock);\n \trcu_read_unlock();\n \n\treturn peer;\n}\n", "cwe": "CWE-416", "big_vul_idx": 182599, "idx": 3859, "hash": 126228411105494440906927692838999625577}
{"project": "linux", "commit_id": "21b5944350052d2583e82dd59b19a9ba94a007f0", "target": 0, "func": "struct net *get_net_ns_by_id(struct net *net, int id)\n{\n\tstruct net *peer;\n\n\tif (id < 0)\n\t\treturn NULL;\n\n\trcu_read_lock();\n \tspin_lock_bh(&net->nsid_lock);\n \tpeer = idr_find(&net->netns_ids, id);\n \tif (peer)\n\t\tpeer = maybe_get_net(peer);\n \tspin_unlock_bh(&net->nsid_lock);\n \trcu_read_unlock();\n \n\treturn peer;\n}\n", "cwe": "CWE-416", "big_vul_idx": 182599, "idx": 161109, "hash": 199598220940675913637764114167033950656}
{"project": "linux", "commit_id": "56897b217a1d0a91c9920cb418d6b3fe922f590a", "target": 1, "func": "static int hci_uart_set_proto(struct hci_uart *hu, int id)\n{\n\tconst struct hci_uart_proto *p;\n\tint err;\n\n\tp = hci_uart_get_proto(id);\n\tif (!p)\n \t\treturn -EPROTONOSUPPORT;\n \n \thu->proto = p;\n\tset_bit(HCI_UART_PROTO_READY, &hu->flags);\n \n \terr = hci_uart_register_dev(hu);\n \tif (err) {\n\t\tclear_bit(HCI_UART_PROTO_READY, &hu->flags);\n \t\treturn err;\n \t}\n \n \treturn 0;\n }\n", "cwe": "CWE-416", "big_vul_idx": 182700, "idx": 3928, "hash": 136154177591265244860327524236767709957}
{"project": "linux", "commit_id": "56897b217a1d0a91c9920cb418d6b3fe922f590a", "target": 0, "func": "static int hci_uart_set_proto(struct hci_uart *hu, int id)\n{\n\tconst struct hci_uart_proto *p;\n\tint err;\n\n\tp = hci_uart_get_proto(id);\n\tif (!p)\n \t\treturn -EPROTONOSUPPORT;\n \n \thu->proto = p;\n \n \terr = hci_uart_register_dev(hu);\n \tif (err) {\n \t\treturn err;\n \t}\n \n\tset_bit(HCI_UART_PROTO_READY, &hu->flags);\n \treturn 0;\n }\n", "cwe": "CWE-416", "big_vul_idx": 182700, "idx": 161177, "hash": 293965652228405522335538503854119315327}
{"project": "linux", "commit_id": "b90cd6f2b905905fb42671009dc0e27c310a16ae", "target": 1, "func": " static void smp_task_done(struct sas_task *task)\n {\n\tif (!del_timer(&task->slow_task->timer))\n\t\treturn;\n \tcomplete(&task->slow_task->completion);\n }\n", "cwe": "CWE-416", "big_vul_idx": 182954, "idx": 4137, "hash": 29609062973361010006381958723218404121}
{"project": "linux", "commit_id": "b90cd6f2b905905fb42671009dc0e27c310a16ae", "target": 0, "func": " static void smp_task_done(struct sas_task *task)\n {\n\tdel_timer(&task->slow_task->timer);\n \tcomplete(&task->slow_task->completion);\n }\n", "cwe": "CWE-416", "big_vul_idx": 182954, "idx": 161376, "hash": 338994261007418485782757959355527765735}
{"project": "linux", "commit_id": "bd998c2e0df0469707503023d50d46cf0b10c787", "target": 1, "func": " void usb_serial_console_disconnect(struct usb_serial *serial)\n {\n\tif (serial->port[0] == usbcons_info.port) {\n \t\tusb_serial_console_exit();\n \t\tusb_serial_put(serial);\n \t}\n}\n", "cwe": "CWE-416", "big_vul_idx": 183184, "idx": 4325, "hash": 5359239449223848751988131611890537499}
{"project": "linux", "commit_id": "bd998c2e0df0469707503023d50d46cf0b10c787", "target": 0, "func": " void usb_serial_console_disconnect(struct usb_serial *serial)\n {\n\tif (serial->port[0] && serial->port[0] == usbcons_info.port) {\n \t\tusb_serial_console_exit();\n \t\tusb_serial_put(serial);\n \t}\n}\n", "cwe": "CWE-416", "big_vul_idx": 183184, "idx": 161523, "hash": 107203638280928405969923960066087490756}
{"project": "Chrome", "commit_id": "761d65ebcac0cdb730fd27b87e207201ac38e3b4", "target": 1, "func": " void ServiceWorkerPaymentInstrument::OnPaymentAppInvoked(\n     mojom::PaymentHandlerResponsePtr response) {\n  DCHECK(delegate_);\n   if (delegate_ != nullptr) {\n     delegate_->OnInstrumentDetailsReady(response->method_name,\n                                         response->stringified_details);\n    delegate_ = nullptr;\n  }\n}\n", "cwe": "CWE-416", "big_vul_idx": 186942, "idx": 7633, "hash": 124123857466942327305934839118596059224}
{"project": "Chrome", "commit_id": "761d65ebcac0cdb730fd27b87e207201ac38e3b4", "target": 0, "func": " void ServiceWorkerPaymentInstrument::OnPaymentAppInvoked(\n     mojom::PaymentHandlerResponsePtr response) {\n   if (delegate_ != nullptr) {\n     delegate_->OnInstrumentDetailsReady(response->method_name,\n                                         response->stringified_details);\n    delegate_ = nullptr;\n  }\n}\n", "cwe": "CWE-416", "big_vul_idx": 186942, "idx": 164679, "hash": 205114343039471085019196750379653310799}
{"project": "libXv", "commit_id": "d9da580b46a28ab497de2e94fdc7b9ff953dab17", "target": 1, "func": "XvQueryAdaptors(\n    Display *dpy,\n    Window window,\n    unsigned int *p_nAdaptors,\n    XvAdaptorInfo **p_pAdaptors)\n{\n    XExtDisplayInfo *info = xv_find_display(dpy);\n    xvQueryAdaptorsReq *req;\n    xvQueryAdaptorsReply rep;\n     size_t size;\n     unsigned int ii, jj;\n     char *name;\n     XvAdaptorInfo *pas = NULL, *pa;\n     XvFormat *pfs, *pf;\n     char *buffer = NULL;\n        char *buffer;\n        char *string;\n        xvAdaptorInfo *pa;\n        xvFormat *pf;\n    } u;\n", "cwe": "CWE-125", "big_vul_idx": 178181, "idx": 270, "hash": 25138831966304988672154482243921916552}
{"project": "libXv", "commit_id": "d9da580b46a28ab497de2e94fdc7b9ff953dab17", "target": 0, "func": "XvQueryAdaptors(\n    Display *dpy,\n    Window window,\n    unsigned int *p_nAdaptors,\n    XvAdaptorInfo **p_pAdaptors)\n{\n    XExtDisplayInfo *info = xv_find_display(dpy);\n    xvQueryAdaptorsReq *req;\n    xvQueryAdaptorsReply rep;\n     size_t size;\n     unsigned int ii, jj;\n     char *name;\n    char *end;\n     XvAdaptorInfo *pas = NULL, *pa;\n     XvFormat *pfs, *pf;\n     char *buffer = NULL;\n        char *buffer;\n        char *string;\n        xvAdaptorInfo *pa;\n        xvFormat *pf;\n    } u;\n", "cwe": "CWE-125", "big_vul_idx": 178181, "idx": 158129, "hash": 13775494404515584781393413951208073381}
{"project": "linux", "commit_id": "81cdb259fb6d8c1c4ecfeea389ff5a73c07f5755", "target": 1, "func": " static void rtc_irq_eoi_tracking_reset(struct kvm_ioapic *ioapic)\n {\n \tioapic->rtc_status.pending_eoi = 0;\n\tbitmap_zero(ioapic->rtc_status.dest_map.map, KVM_MAX_VCPUS);\n }\n", "cwe": "CWE-125", "big_vul_idx": 180019, "idx": 1664, "hash": 131623410041848011402606013176532777833}
{"project": "linux", "commit_id": "81cdb259fb6d8c1c4ecfeea389ff5a73c07f5755", "target": 0, "func": " static void rtc_irq_eoi_tracking_reset(struct kvm_ioapic *ioapic)\n {\n \tioapic->rtc_status.pending_eoi = 0;\n\tbitmap_zero(ioapic->rtc_status.dest_map.map, KVM_MAX_VCPU_ID);\n }\n", "cwe": "CWE-125", "big_vul_idx": 180019, "idx": 159343, "hash": 256233545067978072771602413318579604720}
{"project": "libarchive", "commit_id": "fa7438a0ff4033e4741c807394a9af6207940d71", "target": 1, "func": "atol8(const char *p, size_t char_cnt)\n {\n \tint64_t l;\n \tint digit;\n \tl = 0;\n \twhile (char_cnt-- > 0) {\n \t\tif (*p >= '0' && *p <= '7')\n\t\t\tdigit = *p - '0';\n\t\telse\n\t\t\tbreak;\n\t\tp++;\n\t\tl <<= 3;\n\t\tl |= digit;\n\t}\n\treturn (l);\n}\n", "cwe": "CWE-125", "big_vul_idx": 180940, "idx": 2476, "hash": 223379998720734366501523041321530169470}
{"project": "libarchive", "commit_id": "fa7438a0ff4033e4741c807394a9af6207940d71", "target": 0, "func": "atol8(const char *p, size_t char_cnt)\n {\n \tint64_t l;\n \tint digit;\n\n\tif (char_cnt == 0)\n\t\treturn (0);\n\n \tl = 0;\n \twhile (char_cnt-- > 0) {\n \t\tif (*p >= '0' && *p <= '7')\n\t\t\tdigit = *p - '0';\n\t\telse\n\t\t\tbreak;\n\t\tp++;\n\t\tl <<= 3;\n\t\tl |= digit;\n\t}\n\treturn (l);\n}\n", "cwe": "CWE-125", "big_vul_idx": 180940, "idx": 159939, "hash": 24218382797369877178022935524579823052}
{"project": "radare2", "commit_id": "d2632f6483a3ceb5d8e0a5fb11142c51c43978b4", "target": 1, "func": " static size_t consume_init_expr (ut8 *buf, ut8 *max, ut8 eoc, void *out, ut32 *offset) {\n \tut32 i = 0;\n \twhile (buf + i < max && buf[i] != eoc) {\n\t\ti += 1;\n \t}\n \tif (buf[i] != eoc) {\n \t\treturn 0;\n\t}\n\tif (offset) {\n\t\t*offset += i + 1;\n\t}\n\treturn i + 1;\n}\n", "cwe": "CWE-125", "big_vul_idx": 181422, "idx": 2894, "hash": 84335932977894030368716264234764206411}
{"project": "radare2", "commit_id": "d2632f6483a3ceb5d8e0a5fb11142c51c43978b4", "target": 0, "func": " static size_t consume_init_expr (ut8 *buf, ut8 *max, ut8 eoc, void *out, ut32 *offset) {\n \tut32 i = 0;\n \twhile (buf + i < max && buf[i] != eoc) {\n\t\ti++;\n \t}\n \tif (buf[i] != eoc) {\n \t\treturn 0;\n\t}\n\tif (offset) {\n\t\t*offset += i + 1;\n\t}\n\treturn i + 1;\n}\n", "cwe": "CWE-125", "big_vul_idx": 181422, "idx": 160269, "hash": 127145722673287525056677634281575622070}
{"project": "radare2", "commit_id": "d04c78773f6959bcb427453f8e5b9824d5ba9eff", "target": 1, "func": " INST_HANDLER (sts) {\t// STS k, Rr\n \tint r = ((buf[0] >> 4) & 0xf) | ((buf[1] & 0x1) << 4);\n \tint k = (buf[3] << 8) | buf[2];\n \top->ptr = k;\n\n\tESIL_A (\"r%d,\", r);\n\t__generic_ld_st (op, \"ram\", 0, 1, 0, k, 1);\n\n\top->cycles = 2;\n}\n", "cwe": "CWE-125", "big_vul_idx": 182395, "idx": 3703, "hash": 145404004174958071732437188449141060878}
{"project": "radare2", "commit_id": "d04c78773f6959bcb427453f8e5b9824d5ba9eff", "target": 0, "func": " INST_HANDLER (sts) {\t// STS k, Rr\n\tif (len < 4) {\n\t\treturn;\n\t}\n \tint r = ((buf[0] >> 4) & 0xf) | ((buf[1] & 0x1) << 4);\n \tint k = (buf[3] << 8) | buf[2];\n \top->ptr = k;\n\n\tESIL_A (\"r%d,\", r);\n\t__generic_ld_st (op, \"ram\", 0, 1, 0, k, 1);\n\n\top->cycles = 2;\n}\n", "cwe": "CWE-125", "big_vul_idx": 182395, "idx": 160966, "hash": 218195012166184200496608519421614613480}
{"project": "ImageMagick", "commit_id": "58d9c46929ca0828edde34d263700c3a5fe8dc3c", "target": 1, "func": " MagickExport int LocaleLowercase(const int c)\n {\n  if (c < 0)\n     return(c);\n #if defined(MAGICKCORE_LOCALE_SUPPORT)\n   if (c_locale != (locale_t) NULL)\n    return(tolower_l((int) ((unsigned char) c),c_locale));\n#endif\n  return(tolower((int) ((unsigned char) c)));\n}\n", "cwe": "CWE-125", "big_vul_idx": 183407, "idx": 4499, "hash": 281269707960595026750786236645639829157}
{"project": "ImageMagick", "commit_id": "58d9c46929ca0828edde34d263700c3a5fe8dc3c", "target": 0, "func": " MagickExport int LocaleLowercase(const int c)\n {\n  if (c == EOF)\n     return(c);\n #if defined(MAGICKCORE_LOCALE_SUPPORT)\n   if (c_locale != (locale_t) NULL)\n    return(tolower_l((int) ((unsigned char) c),c_locale));\n#endif\n  return(tolower((int) ((unsigned char) c)));\n}\n", "cwe": "CWE-125", "big_vul_idx": 183407, "idx": 161655, "hash": 29052808171853626717562657787189086316}
{"project": "ghostscript", "commit_id": "c501a58f8d5650c8ba21d447c0d6f07eafcb0f15", "target": 1, "func": "   static void  Ins_JMPR( INS_ARG )\n   {\n     CUR.IP      += (Int)(args[0]);\n     CUR.step_ins = FALSE;\n     * allow for simple cases here by just checking the preceding byte.\n     * Fonts with this problem are not uncommon.\n     */\n      CUR.IP -= 1;\n  }\n", "cwe": "CWE-125", "big_vul_idx": 177950, "idx": 9126, "hash": 252024308972366795127261910281364074569}
{"project": "ghostscript", "commit_id": "c501a58f8d5650c8ba21d447c0d6f07eafcb0f15", "target": 0, "func": "   static void  Ins_JMPR( INS_ARG )\n   {\n    if ( BOUNDS(CUR.IP + args[0], CUR.codeSize ) )\n    {\n      CUR.error = TT_Err_Invalid_Reference;\n      return;\n    }\n\n     CUR.IP      += (Int)(args[0]);\n     CUR.step_ins = FALSE;\n     * allow for simple cases here by just checking the preceding byte.\n     * Fonts with this problem are not uncommon.\n     */\n      CUR.IP -= 1;\n  }\n", "cwe": "CWE-125", "big_vul_idx": 177950, "idx": 184280, "hash": 130193156571556853712779798784537785627}
{"project": "savannah", "commit_id": "1fbee57ef3c72db2206dd87e4162108b2f425555", "target": 1, "func": " stringprep_utf8_nfkc_normalize (const char *str, ssize_t len)\n {\n   return g_utf8_normalize (str, len, G_NORMALIZE_NFKC);\n }\n", "cwe": "CWE-125", "big_vul_idx": 178156, "idx": 9140, "hash": 297537804287697693483081230557742789206}
{"project": "savannah", "commit_id": "1fbee57ef3c72db2206dd87e4162108b2f425555", "target": 0, "func": " stringprep_utf8_nfkc_normalize (const char *str, ssize_t len)\n {\n  size_t n;\n\n  if (len < 0)\n    n = strlen (str);\n  else\n    n = len;\n\n  if (u8_check ((const uint8_t *) str, n))\n    return NULL;\n\n   return g_utf8_normalize (str, len, G_NORMALIZE_NFKC);\n }\n", "cwe": "CWE-125", "big_vul_idx": 178156, "idx": 184295, "hash": 337467835415721889022780304692340871687}
{"project": "openssl", "commit_id": "0ed26acce328ec16a3aa635f1ca37365e8c7403a", "target": 1, "func": "int TS_OBJ_print_bio(BIO *bio, const ASN1_OBJECT *obj)\n {\n     char obj_txt[128];\n \n    int len = OBJ_obj2txt(obj_txt, sizeof(obj_txt), obj, 0);\n    BIO_write(bio, obj_txt, len);\n    BIO_write(bio, \"\\n\", 1);\n \n     return 1;\n }\n", "cwe": "CWE-125", "big_vul_idx": 180607, "idx": 9389, "hash": 23563415281384434870191453815863052328}
{"project": "openssl", "commit_id": "0ed26acce328ec16a3aa635f1ca37365e8c7403a", "target": 0, "func": "int TS_OBJ_print_bio(BIO *bio, const ASN1_OBJECT *obj)\n {\n     char obj_txt[128];\n \n    OBJ_obj2txt(obj_txt, sizeof(obj_txt), obj, 0);\n    BIO_printf(bio, \"%s\\n\", obj_txt);\n \n     return 1;\n }\n", "cwe": "CWE-125", "big_vul_idx": 180607, "idx": 184491, "hash": 148174202715247582396215845481074740384}
{"project": "linux", "commit_id": "786de92b3cb26012d3d0f00ee37adf14527f35c4", "target": 1, "func": " static int uas_switch_interface(struct usb_device *udev,\n \t\t\t\tstruct usb_interface *intf)\n {\n\tint alt;\n \n \talt = uas_find_uas_alt_setting(intf);\n\tif (alt < 0)\n\t\treturn alt;\n \n\treturn usb_set_interface(udev,\n\t\t\tintf->altsetting[0].desc.bInterfaceNumber, alt);\n }\n", "cwe": "CWE-125", "big_vul_idx": 180852, "idx": 9409, "hash": 140637843410934788781615356323960315123}
{"project": "linux", "commit_id": "786de92b3cb26012d3d0f00ee37adf14527f35c4", "target": 0, "func": " static int uas_switch_interface(struct usb_device *udev,\n \t\t\t\tstruct usb_interface *intf)\n {\n\tstruct usb_host_interface *alt;\n \n \talt = uas_find_uas_alt_setting(intf);\n\tif (!alt)\n\t\treturn -ENODEV;\n \n\treturn usb_set_interface(udev, alt->desc.bInterfaceNumber,\n\t\t\talt->desc.bAlternateSetting);\n }\n", "cwe": "CWE-125", "big_vul_idx": 180852, "idx": 184511, "hash": 256589686740686642442836648099321650706}
{"project": "liblouis", "commit_id": "5e4089659bb49b3095fa541fa6387b4c40d7396e", "target": 1, "func": "matchCurrentInput(\n \t\tconst InString *input, int pos, const widechar *passInstructions, int passIC) {\n \tint k;\n \tint kk = pos;\n\tfor (k = passIC + 2; k < passIC + 2 + passInstructions[passIC + 1]; k++)\n \t\tif (input->chars[kk] == ENDSEGMENT || passInstructions[k] != input->chars[kk++])\n \t\t\treturn 0;\n \treturn 1;\n}\n", "cwe": "CWE-125", "big_vul_idx": 182194, "idx": 10596, "hash": 186673007973266342184945021931615627315}
{"project": "liblouis", "commit_id": "5e4089659bb49b3095fa541fa6387b4c40d7396e", "target": 0, "func": "matchCurrentInput(\n \t\tconst InString *input, int pos, const widechar *passInstructions, int passIC) {\n \tint k;\n \tint kk = pos;\n\tfor (k = passIC + 2;\n\t\t\t((k < passIC + 2 + passInstructions[passIC + 1]) && (kk < input->length));\n\t\t\tk++)\n \t\tif (input->chars[kk] == ENDSEGMENT || passInstructions[k] != input->chars[kk++])\n \t\t\treturn 0;\n \treturn 1;\n}\n", "cwe": "CWE-125", "big_vul_idx": 182194, "idx": 194903, "hash": 88030999733589072549529962738269087081}
{"project": "monit", "commit_id": "f12d0cdb42d4e74dffe1525d4062c815c48ac57a", "target": 1, "func": "static char x2c(char *hex) {\n        register char digit;\n        digit = ((hex[0] >= 'A') ? ((hex[0] & 0xdf) - 'A')+10 : (hex[0] - '0'));\n        digit *= 16;\n        digit += (hex[1] >= 'A' ? ((hex[1] & 0xdf) - 'A')+10 : (hex[1] - '0'));\n        return(digit);\n}", "idx": 217177, "cwe": "CWE-125", "hash": 138454520593983181536402012314429970625, "dataset": "other"}
{"project": "monit", "commit_id": "f12d0cdb42d4e74dffe1525d4062c815c48ac57a", "target": 0, "func": "static char _x2c(char *hex) {\n        register char digit;\n        digit = ((hex[0] >= 'A') ? ((hex[0] & 0xdf) - 'A')+10 : (hex[0] - '0'));\n        digit *= 16;\n        digit += (hex[1] >= 'A' ? ((hex[1] & 0xdf) - 'A')+10 : (hex[1] - '0'));\n        return(digit);\n}", "idx": 517462, "cwe": "CWE-125", "hash": 138535708238441135113329058361494594059, "dataset": "other"}
